Directory structure:
└── web/
    ├── Dockerfile
    ├── index.html
    ├── package.json
    ├── vite.config.js
    ├── .dockerignore
    ├── public/
    │   └── index.html
    └── src/
        ├── App.jsx
        ├── main.jsx
        ├── components/
        │   └── layout/
        │       ├── Header.jsx
        │       └── Sidebar.jsx
        ├── pages/
        │   ├── Dashboard.jsx
        │   ├── Login.jsx
        │   ├── Notifications.jsx
        │   ├── Projects.jsx
        │   ├── Setting.jsx
        │   └── Tasks.jsx
        └── router/
            └── AppRoutes.jsx

================================================
FILE: Dockerfile
================================================
FROM node:18-slim

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

WORKDIR /app

EXPOSE 5173

CMD ["npm", "run", "dev"]



================================================
FILE: index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Teal</title>

  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



================================================
FILE: package.json
================================================
{
  "name": "web",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --host",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "axios": "^1.10.0",
    "lucide-react": "^0.525.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.7.0"
  },
  "devDependencies": {
    "@babel/plugin-proposal-decorators": "^7.28.0",
    "@eslint/js": "^9.30.1",
    "@tailwindcss/postcss": "^4.1.11",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^4.1.11",
    "vite": "^6.3.5"
  }
}



================================================
FILE: vite.config.js
================================================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})



================================================
FILE: .dockerignore
================================================
[Empty file]


================================================
FILE: public/index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Teal</title>

  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



================================================
FILE: src/App.jsx
================================================
import { useLocation } from 'react-router-dom';
import Sidebar from './components/layout/Sidebar.jsx';
import AppRoutes from './router/AppRoutes.jsx';

const styles = {
  layout: {
    display: 'flex',
    height: '100vh'
  },
  main: {
    flex: 1,
    padding: '2rem',
    overflowY: 'auto',
    display: 'flex',
    flexDirection: 'column'
  }
};

export default function App() {
  const location = useLocation();
  const hideSidebar = location.pathname === '/login';

  return (
    <div style={hideSidebar ? {} : styles.layout}>
      {!hideSidebar && <Sidebar />}
      <div style={styles.main}>
        <AppRoutes />
      </div>
    </div>
  );
}



================================================
FILE: src/main.jsx
================================================
import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter } from 'react-router-dom';
import App from './App.jsx';

ReactDOM.createRoot(document.getElementById('root')).render(
  <BrowserRouter>
    <App />
  </BrowserRouter>
);



================================================
FILE: src/components/layout/Header.jsx
================================================
const styles = {
  header: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: '24px',
    backgroundColor: 'white',
    borderRadius: '16px',
    boxShadow: '0 1px 3px rgba(0,0,0,0.1)'
  },
  title: {
    fontSize: '1.5rem',
    fontWeight: 'bold',
    color: '#374151'
  },
  avatar: {
    width: '40px',
    height: '40px',
    borderRadius: '50%',
    backgroundColor: '#e5e7eb'
  }
};

export default function Header({ title }) {
  return (
    <header style={styles.header}>
      <h1 style={styles.title}>{title}</h1>
      <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
        <div style={styles.avatar} />
      </div>
    </header>
  );
}



================================================
FILE: src/components/layout/Sidebar.jsx
================================================
import { NavLink } from 'react-router-dom';
import { Home, Folder, ClipboardList, Bell, Settings, Users } from 'lucide-react';

const styles = {
  sidebar: {
    width: '80px',
    background: 'linear-gradient(145deg, #e0e0e5, #ffffff)',
    boxShadow: '10px 10px 30px #d1d1d6, -10px -10px 30px #ffffff',
    borderRadius: '20px',
    padding: '20px 10px',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    position: 'relative'
  },
  logo: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: '48px',
    height: '48px',
    borderRadius: '12px',
    background: 'linear-gradient(to right, #8b5cf6, #ec4899)',
    color: 'white',
    boxShadow: '0 4px 6px rgba(0,0,0,0.1)',
    marginBottom: '32px'
  },
  navItem: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: '48px',
    height: '48px',
    borderRadius: '12px',
    transition: 'all 0.2s ease',
    margin: '16px 0',
    color: '#6b7280'
  },
  activeNavItem: {
    backgroundColor: '#f3e8ff',
    color: '#8b5cf6',
    boxShadow: '0 4px 6px rgba(0,0,0,0.1)'
  }
};

export default function Sidebar() {
  return (
    <aside style={styles.sidebar}>
      <div style={styles.logo}>
        <Users size={20} />
      </div>

      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '16px' }}>
        <NavLink 
          to="/" 
          style={({ isActive }) => 
            isActive ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem
          }
          title="Dashboard"
        >
          <Home size={20} />
        </NavLink>

        <NavLink 
          to="/projects" 
          style={({ isActive }) => 
            isActive ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem
          }
          title="Projects"
        >
          <Folder size={20} />
        </NavLink>

        <NavLink 
          to="/tasks" 
          style={({ isActive }) => 
            isActive ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem
          }
          title="Tasks"
        >
          <ClipboardList size={20} />
        </NavLink>

        <NavLink 
          to="/notifications" 
          style={({ isActive }) => 
            isActive ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem
          }
          title="Notifications"
        >
          <Bell size={20} />
        </NavLink>
      </div>

      <div style={{ marginTop: 'auto' }}>
        <NavLink 
          to="/settings" 
          style={({ isActive }) => 
            isActive ? { 
              ...styles.navItem, 
              backgroundColor: '#f3f4f6',
              color: '#374151'
            } : styles.navItem
          }
          title="Settings"
        >
          <Settings size={20} />
        </NavLink>
      </div>
    </aside>
  );
}



================================================
FILE: src/pages/Dashboard.jsx
================================================
import Header from '../components/layout/Header';
import { CheckCircle, ClipboardList, MessageSquare } from 'lucide-react';

const styles = {
  card: {
    background: 'linear-gradient(145deg, #f0f0f5, #ffffff)',
    boxShadow: '6px 6px 20px #d1d1d6, -6px -6px 20px #ffffff',
    borderRadius: '20px',
    padding: '24px',
    transition: 'transform 0.2s ease'
  },
  statValue: {
    fontSize: '1.875rem',
    fontWeight: 'bold',
    color: '#8b5cf6',
    marginBottom: '4px'
  },
  statLabel: {
    color: '#6b7280',
    fontSize: '0.875rem'
  }
};

export default function Dashboard() {
  const stats = {
    totalTasks: 120,
    completedTasks: 85,
    ongoingProjects: 5,
    activeMembers: 12,
  };

  return (
    <div style={{ padding: '2rem' }}>
      <Header title="Dashboard" />
      <div style={{ 
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
        gap: '24px',
        marginTop: '24px'
      }}>
        {/* Stats Cards */}
        <div style={styles.card}>
          <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#374151', marginBottom: '16px' }}>
            Tasks Overview
          </h3>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
            <div>
              <p style={styles.statValue}>{stats.completedTasks}/{stats.totalTasks}</p>
              <p style={styles.statLabel}>Completed Tasks</p>
            </div>
            <div style={{ width: '96px', height: '96px' }}>
              <svg viewBox="0 0 36 36" style={{ display: 'block', margin: '0 auto', maxWidth: '100%', maxHeight: '100%' }}>
                <path
                  d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                  fill="none"
                  stroke="#eee"
                  strokeWidth="3"
                />
                <path
                  strokeDasharray={`${(stats.completedTasks / stats.totalTasks) * 100}, 100`}
                  d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                  fill="none"
                  stroke="#8b5cf6"
                  strokeWidth="3"
                  style={{ animation: 'progress 1s ease-out forwards' }}
                />
              </svg>
            </div>
          </div>
        </div>

        <div style={styles.card}>
          <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#374151', marginBottom: '16px' }}>
            Active Projects
          </h3>
          <p style={{ ...styles.statValue, color: '#3b82f6' }}>{stats.ongoingProjects}</p>
          <p style={styles.statLabel}>Ongoing Projects</p>
        </div>

        <div style={styles.card}>
          <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#374151', marginBottom: '16px' }}>
            Team Members
          </h3>
          <p style={{ ...styles.statValue, color: '#10b981' }}>{stats.activeMembers}</p>
          <p style={styles.statLabel}>Active Members</p>
        </div>
      </div>
    </div>
  );
}



================================================
FILE: src/pages/Login.jsx
================================================
import React from 'react';
import { useNavigate } from 'react-router-dom';
import { Github, Users } from 'lucide-react';

const styles = {
  container: {
    minHeight: '100vh',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    background: 'radial-gradient(circle at top left, #f4f5fa, #e8eaf6)',
    padding: '16px'
  },
  loginBox: {
    width: '100%',
    maxWidth: '400px',
    backgroundColor: '#f4f5fa',
    borderRadius: '24px',
    padding: '32px',
    boxShadow: '10px 10px 20px #d1d9e6, -10px -10px 20px #ffffff',
    transition: 'all 0.3s ease'
  },
  logo: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: '64px',
    height: '64px',
    borderRadius: '16px',
    background: 'linear-gradient(to right, teal, #EDDD53)',
    color: 'white',
    boxShadow: '0 4px 20px rgba(139, 92, 246, 0.3)',
    margin: '0 auto 16px'
  },
  title: {
    fontSize: '2rem',
    fontWeight: 'bold',
    color: '#1f2937',
    textAlign: 'center',
    marginBottom: '8px'
  },
  subtitle: {
    fontSize: '0.875rem',
    color: '#6b7280',
    textAlign: 'center',
    marginBottom: '32px'
  },
  button: {
    width: '100%',
    background: 'linear-gradient(to right, teal, #EDDD53)',
    color: 'white',
    border: 'none',
    padding: '14px',
    borderRadius: '12px',
    fontSize: '1rem',
    fontWeight: '600',
    cursor: 'pointer',
    boxShadow: '0 4px 15px rgba(0,0,0,0.15)',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: '12px',
    transition: 'all 0.2s ease'
  },
  buttonHover: {
    transform: 'scale(1.03)',
    boxShadow: '0 6px 20px rgba(0,0,0,0.2)'
  },
  footer: {
    fontSize: '0.75rem',
    color: '#9ca3af',
    textAlign: 'center',
    marginTop: '24px'
  }
};

function Login() {
  const [isHovered, setIsHovered] = React.useState(false);
  const navigate = useNavigate();

  const handleLogin = () => {
    // Replace with your actual login logic
    console.log('Logging in with GitHub');
    navigate('/');
  };

  return (
    <div style={styles.container}>
      <div style={styles.loginBox}>
        <div style={styles.logo}>
          <Users size={28} />
        </div>
        
        <h1 style={styles.title}>Teal</h1>
        <p style={styles.subtitle}>UGV's inhouse management app</p>
        
        <div style={{ marginBottom: '32px', textAlign: 'center' }}>
          <h2 style={{ fontSize: '1.25rem', fontWeight: '600', color: '#374151', marginBottom: '8px' }}>
            Welcome Back
          </h2>
          <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>
            Sign in with GitHub to manage projects and tasks
          </p>
        </div>

        <button
          onClick={handleLogin}
          style={{ ...styles.button, ...(isHovered ? styles.buttonHover : {}) }}
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
        >
          <Github size={20} />
          Continue with GitHub
        </button>

        <p style={{ fontSize: '0.75rem', color: '#9ca3af', textAlign: 'center', marginTop: '24px' }}>
          By signing in, you agree to our team collaboration guidelines
        </p>
      </div>

      <p style={styles.footer}>
        Made for UGV DTU • Secure(Maybe) & Fast
      </p>
    </div>
  );
}

export default Login;



================================================
FILE: src/pages/Notifications.jsx
================================================
import Header from '../components/layout/Header';
import { Bell, CheckCircle, Clock, AlertCircle } from 'lucide-react';

const Notifications = () => {
  const notifications = [
    {
      id: 1,
      type: 'completed',
      title: 'Task completed',
      message: 'UI Redesign task marked as complete by John',
      time: '2 hours ago',
      read: false
    },
    {
      id: 2,
      type: 'upcoming',
      title: 'Meeting reminder',
      message: 'Project kickoff meeting in 30 minutes',
      time: '30 minutes ago',
      read: true
    },
    {
      id: 3,
      type: 'alert',
      title: 'Deadline approaching',
      message: 'API integration task due tomorrow',
      time: '1 day ago',
      read: false
    }
  ];

  return (
    <div className="main">
      <Header title="Notifications" />
      <div className="card p-6">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-xl font-bold text-gray-800">Recent Notifications</h2>
          <button className="text-sm text-purple-500 hover:text-purple-700">
            Mark all as read
          </button>
        </div>

        <div className="space-y-4">
          {notifications.map((notification) => (
            <div 
              key={notification.id} 
              className={`p-4 rounded-xl transition-all ${notification.read ? 'bg-white' : 'bg-purple-50'} shadow-sm hover:shadow-md`}
            >
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-full ${notification.type === 'completed' ? 'bg-green-100 text-green-600' : 
                               notification.type === 'upcoming' ? 'bg-yellow-100 text-yellow-600' : 
                               'bg-red-100 text-red-600'}`}>
                  {notification.type === 'completed' ? <CheckCircle className="w-5 h-5" /> : 
                   notification.type === 'upcoming' ? <Clock className="w-5 h-5" /> : 
                   <AlertCircle className="w-5 h-5" />}
                </div>
                <div className="flex-1">
                  <h3 className="font-medium text-gray-800">{notification.title}</h3>
                  <p className="text-sm text-gray-600">{notification.message}</p>
                  <p className="text-xs text-gray-400 mt-1">{notification.time}</p>
                </div>
                {!notification.read && (
                  <div className="w-2 h-2 rounded-full bg-purple-500 mt-2"></div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Notifications;



================================================
FILE: src/pages/Projects.jsx
================================================
import Header from '../components/layout/Header';
import { Folder, Users, GitBranch, Clock, CheckCircle } from 'lucide-react';

const Projects = () => {
  const projects = [
    {
      id: 1,
      name: 'TeamHub Dashboard',
      description: 'College team management system',
      progress: 75,
      members: 4,
      branches: 3,
      deadline: '2023-12-15',
      status: 'active'
    },
    {
      id: 2,
      name: 'Library App',
      description: 'Digital library management',
      progress: 30,
      members: 3,
      branches: 2,
      deadline: '2024-01-20',
      status: 'active'
    },
    {
      id: 3,
      name: 'Alumni Portal',
      description: 'College alumni network',
      progress: 100,
      members: 5,
      branches: 4,
      deadline: '2023-11-10',
      status: 'completed'
    }
  ];

  return (
    <div className="main">
      <Header title="Projects" />
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {projects.map((project) => (
          <div key={project.id} className="card p-6 hover:transform hover:-translate-y-1 transition-transform">
            <div className="flex items-start justify-between mb-4">
              <div className="p-3 rounded-xl bg-purple-100 text-purple-600">
                <Folder className="w-6 h-6" />
              </div>
              <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                project.status === 'completed' ? 'bg-green-100 text-green-600' : 'bg-blue-100 text-blue-600'
              }`}>
                {project.status === 'completed' ? 'Completed' : 'Active'}
              </span>
            </div>
            
            <h3 className="text-lg font-bold text-gray-800 mb-1">{project.name}</h3>
            <p className="text-sm text-gray-600 mb-4">{project.description}</p>
            
            <div className="mb-4">
              <div className="flex justify-between text-xs text-gray-500 mb-1">
                <span>Progress</span>
                <span>{project.progress}%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className={`h-2 rounded-full ${
                    project.progress === 100 ? 'bg-green-500' : 'bg-purple-500'
                  }`} 
                  style={{ width: `${project.progress}%` }}
                ></div>
              </div>
            </div>
            
            <div className="flex items-center justify-between text-sm text-gray-500">
              <div className="flex items-center space-x-2">
                <Users className="w-4 h-4" />
                <span>{project.members}</span>
              </div>
              <div className="flex items-center space-x-2">
                <GitBranch className="w-4 h-4" />
                <span>{project.branches}</span>
              </div>
              <div className="flex items-center space-x-2">
                <Clock className="w-4 h-4" />
                <span>{project.deadline}</span>
              </div>
            </div>
          </div>
        ))}
        
        <div className="card p-6 flex flex-col items-center justify-center border-2 border-dashed border-gray-300 hover:border-purple-300 transition-colors">
          <div className="p-3 rounded-xl bg-gray-100 text-gray-500 mb-4">
            <Folder className="w-6 h-6" />
          </div>
          <h3 className="text-lg font-medium text-gray-500 mb-2">New Project</h3>
          <button className="text-sm text-purple-500 hover:text-purple-700">
            + Create Project
          </button>
        </div>
      </div>
    </div>
  );
};

export default Projects;



================================================
FILE: src/pages/Setting.jsx
================================================
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { User, Mail, Phone, MapPin, Calendar, Save, Camera, Github, Linkedin, Globe } from 'lucide-react';
import axios from 'axios';

axios.defaults.withCredentials = true;

const styles = {
  container: {
    maxWidth: '1200px',
    margin: '0 auto',
    padding: '24px'
  },
  header: {
    marginBottom: '32px'
  },
  title: {
    fontSize: '2rem',
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: '8px'
  },
};

export default function Settings() {
  const [user, setUser] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    rollNumber: '',
    branch: '',
    year: '',
    position: 'Member',
    bio: '',
    skills: '',
    socialLinks: {
      github: '',
      linkedin: '',
      portfolio: ''
    }
  });
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const navigate = useNavigate();

    useEffect(() => {
      const fetchUserData = async () => {
        try {
          const response = await axios.get('http://localhost:5000/auth/user', {
            withCredentials: true
          });
          
          if (response.status !== 200) {
            throw new Error('Failed to fetch user data');
          }

          const userData = response.data;
          setUser(userData);
          
          setFormData({
            name: userData.name || '',
            email: userData.email || '',
            phone: userData.phone || '',
            rollNumber: userData.rollNumber || '',
            branch: userData.branch || '',
            year: userData.year || '',
            position: userData.position || 'Member',
            bio: userData.bio || '',
            skills: Array.isArray(userData.skills) ? 
                   userData.skills.join(', ') : 
                   userData.skills || '',
            socialLinks: {
              github: userData.socialLinks?.github || userData.html_url || '',
              linkedin: userData.socialLinks?.linkedin || '',
              portfolio: userData.socialLinks?.portfolio || ''
            }
          });
        } catch (error) {
          console.error('Error fetching user data:', error);
          if (error.response?.status === 401) {
            navigate('/login');
          } else {
            // Show user-friendly error message
            alert('Failed to load user data. Please try again later.');
          }
        } finally {
          setLoading(false);
        }
      };

      fetchUserData();
    }, [navigate]);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    
    if (name.startsWith('social_')) {
      const socialKey = name.replace('social_', '');
      setFormData(prev => ({
        ...prev,
        socialLinks: {
          ...prev.socialLinks,
          [socialKey]: value
        }
      }));
    } else {
      setFormData(prev => ({
        ...prev,
        [name]: value
      }));
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setSaving(true);
    
    try {
      const response = await axios.put('http://localhost:5000/auth/profile', formData);
      setUser(response.data);
      alert('Profile updated successfully!');
    } catch (error) {
      console.error('Error updating profile:', error);
      alert(error.response?.data?.error || 'Failed to update profile');
    } finally {
      setSaving(false);
    }
  };

  if (loading) {
    return <div>Loading...</div>;
  }
  if (loading) {
    return (
      <div style={{ 
        display: 'flex', 
        alignItems: 'center', 
        justifyContent: 'center', 
        height: '100vh' 
      }}>
        <div style={{ 
          width: '40px', 
          height: '40px', 
          border: '4px solid #e5e7eb', 
          borderTopColor: '#8b5cf6', 
          borderRadius: '50%', 
          animation: 'spin 1s linear infinite'
        }}></div>
      </div>
    );
  }

  return (
    <div style={styles.container}>
      <div style={styles.header}>
        <h1 style={styles.title}>Profile Settings</h1>
        <p style={styles.subtitle}>Manage your team profile and preferences</p>
      </div>

      <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '24px' }}>
        {/* Profile Picture Section */}
        <div style={styles.card}>
          <div style={styles.avatarContainer}>
            <img 
              src={user?.avatar_url || 'https://via.placeholder.com/120'} 
              alt="Profile" 
              style={styles.avatar}
              onError={(e) => {
                e.target.src = 'https://via.placeholder.com/120';
              }}
            />
            <button style={styles.avatarButton}>
              <Camera size={16} />
            </button>
          </div>
          
          <h3 style={{ fontSize: '1.25rem', fontWeight: '600', marginBottom: '4px' }}>
            {user?.name}
          </h3>
          <p style={{ color: '#8b5cf6', fontWeight: '500', marginBottom: '16px' }}>
            {formData.position}
          </p>
          <p style={{ color: '#6b7280', fontSize: '0.875rem' }}>
            {formData.branch} • Year {formData.year}
          </p>

          {/* Social Links */}
          {user?.socialLinks?.github && (
            <a 
              href={user.socialLinks.github} 
              target="_blank" 
              rel="noopener noreferrer"
              style={styles.socialLink}
            >
              <Github size={16} />
              GitHub
            </a>
          )}
          {user?.socialLinks?.linkedin && (
            <a 
              href={user.socialLinks.linkedin} 
              target="_blank" 
              rel="noopener noreferrer"
              style={styles.socialLink}
            >
              <Linkedin size={16} />
              LinkedIn
            </a>
          )}
          {user?.socialLinks?.portfolio && (
            <a 
              href={user.socialLinks.portfolio} 
              target="_blank" 
              rel="noopener noreferrer"
              style={styles.socialLink}
            >
              <Globe size={16} />
              Portfolio
            </a>
          )}
        </div>

        {/* Profile Form */}
        <form onSubmit={handleSubmit} style={styles.card}>
          <h2 style={{ fontSize: '1.5rem', fontWeight: '600', marginBottom: '24px' }}>
            Personal Information
          </h2>
          
          <div style={styles.formGrid}>
            {/* Basic Info */}
            <div style={styles.inputGroup}>
              <label style={styles.label}>
                <User size={16} />
                Full Name
              </label>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                style={styles.input}
                required
              />
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                <Mail size={16} />
                Email Address
              </label>
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleInputChange}
                style={styles.input}
                required
              />
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                <Phone size={16} />
                Phone Number
              </label>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                style={styles.input}
              />
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                Roll Number
              </label>
              <input
                type="text"
                name="rollNumber"
                value={formData.rollNumber}
                onChange={handleInputChange}
                style={styles.input}
              />
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                Branch/Department
              </label>
              <select
                name="branch"
                value={formData.branch}
                onChange={handleInputChange}
                style={styles.input}
              >
                <option value="">Select Branch</option>
                <option value="Computer Science">Computer Science</option>
                <option value="Information Technology">Information Technology</option>
                <option value="Electronics">Electronics</option>
                <option value="Mechanical">Mechanical</option>
                <option value="Civil">Civil</option>
                <option value="Electrical">Electrical</option>
              </select>
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                Academic Year
              </label>
              <select
                name="year"
                value={formData.year}
                onChange={handleInputChange}
                style={styles.input}
              >
                <option value="">Select Year</option>
                <option value="1">1st Year</option>
                <option value="2">2nd Year</option>
                <option value="3">3rd Year</option>
                <option value="4">4th Year</option>
              </select>
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                Team Position
              </label>
              <select
                name="position"
                value={formData.position}
                onChange={handleInputChange}
                style={styles.input}
              >
                <option value="Member">Member</option>
                <option value="Team Lead">Team Lead</option>
                <option value="Project Manager">Project Manager</option>
                <option value="Developer">Developer</option>
                <option value="Designer">Designer</option>
                <option value="Analyst">Analyst</option>
              </select>
            </div>

            <div style={styles.inputGroup}>
              <label style={styles.label}>
                Skills (comma separated)
              </label>
              <input
                type="text"
                name="skills"
                value={formData.skills}
                onChange={handleInputChange}
                placeholder="React, Node.js, Python, UI/UX"
                style={styles.input}
              />
            </div>
          </div>

          {/* Bio Section */}
          <div style={{ margin: '24px 0' }}>
            <label style={styles.label}>
              Bio
            </label>
            <textarea
              name="bio"
              value={formData.bio}
              onChange={handleInputChange}
              rows="4"
              placeholder="Tell us about yourself and your interests..."
              style={{ ...styles.input, minHeight: '100px' }}
            />
          </div>

          {/* Social Links Section */}
          <div style={{ margin: '24px 0' }}>
            <h3 style={{ fontSize: '1.25rem', fontWeight: '600', marginBottom: '16px' }}>
              Social Links
            </h3>
            <div style={styles.formGrid}>
              <div style={styles.inputGroup}>
                <label style={styles.label}>
                  <Github size={16} />
                  GitHub URL
                </label>
                <input
                  type="url"
                  name="social_github"
                  value={formData.socialLinks.github}
                  onChange={handleInputChange}
                  placeholder="https://github.com/username"
                  style={styles.input}
                />
              </div>
              <div style={styles.inputGroup}>
                <label style={styles.label}>
                  <Linkedin size={16} />
                  LinkedIn URL
                </label>
                <input
                  type="url"
                  name="social_linkedin"
                  value={formData.socialLinks.linkedin}
                  onChange={handleInputChange}
                  placeholder="https://linkedin.com/in/username"
                  style={styles.input}
                />
              </div>
              <div style={styles.inputGroup}>
                <label style={styles.label}>
                  <Globe size={16} />
                  Portfolio URL
                </label>
                <input
                  type="url"
                  name="social_portfolio"
                  value={formData.socialLinks.portfolio}
                  onChange={handleInputChange}
                  placeholder="https://yourportfolio.com"
                  style={styles.input}
                />
              </div>
            </div>
          </div>

          {/* Submit Button */}
          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>
            <button
              type="submit"
              disabled={saving}
              style={{ 
                ...styles.button, 
                ...(isHovered && !saving ? styles.buttonHover : {}),
                opacity: saving ? 0.7 : 1
              }}
              onMouseEnter={() => setIsHovered(true)}
              onMouseLeave={() => setIsHovered(false)}
            >
              {saving ? (
                <>
                  <div style={{ 
                    width: '16px', 
                    height: '16px', 
                    border: '2px solid rgba(255,255,255,0.3)', 
                    borderTopColor: 'white', 
                    borderRadius: '50%', 
                    animation: 'spin 1s linear infinite'
                  }}></div>
                  Saving...
                </>
              ) : (
                <>
                  <Save size={16} />
                  Save Changes
                </>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}



================================================
FILE: src/pages/Tasks.jsx
================================================
import Header from '../components/layout/Header';
import { ClipboardList, CheckCircle, AlertCircle, Clock, Plus } from 'lucide-react';

const Tasks = () => {
  const tasks = [
    {
      id: 1,
      title: 'Design dashboard UI',
      project: 'TeamHub',
      priority: 'high',
      status: 'in-progress',
      dueDate: '2023-12-10',
      assignedTo: 'You'
    },
    {
      id: 2,
      title: 'Implement authentication',
      project: 'TeamHub',
      priority: 'medium',
      status: 'todo',
      dueDate: '2023-12-15',
      assignedTo: 'John'
    },
    {
      id: 3,
      title: 'Write API documentation',
      project: 'Library App',
      priority: 'low',
      status: 'completed',
      dueDate: '2023-11-28',
      assignedTo: 'Sarah'
    }
  ];

  return (
    <div className="main">
      <Header title="Tasks" />
      <div className="card p-6">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-xl font-bold text-gray-800">My Tasks</h2>
          <button className="button flex items-center gap-2">
            <Plus className="w-4 h-4" />
            New Task
          </button>
        </div>

        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="text-left text-gray-500 border-b">
                <th className="pb-3">Task</th>
                <th className="pb-3">Project</th>
                <th className="pb-3">Priority</th>
                <th className="pb-3">Status</th>
                <th className="pb-3">Due Date</th>
                <th className="pb-3">Assigned To</th>
              </tr>
            </thead>
            <tbody className="divide-y">
              {tasks.map((task) => (
                <tr key={task.id} className="hover:bg-gray-50 transition-colors">
                  <td className="py-4">
                    <div className="flex items-center gap-3">
                      <ClipboardList className="w-5 h-5 text-gray-400" />
                      <span className="font-medium">{task.title}</span>
                    </div>
                  </td>
                  <td className="py-4 text-gray-600">{task.project}</td>
                  <td className="py-4">
                    <span className={`px-2 py-1 rounded-full text-xs ${
                      task.priority === 'high' ? 'bg-red-100 text-red-600' :
                      task.priority === 'medium' ? 'bg-yellow-100 text-yellow-600' :
                      'bg-green-100 text-green-600'
                    }`}>
                      {task.priority}
                    </span>
                  </td>
                  <td className="py-4">
                    <div className="flex items-center gap-2">
                      {task.status === 'completed' ? (
                        <CheckCircle className="w-4 h-4 text-green-500" />
                      ) : task.status === 'in-progress' ? (
                        <Clock className="w-4 h-4 text-yellow-500" />
                      ) : (
                        <AlertCircle className="w-4 h-4 text-gray-400" />
                      )}
                      <span className="capitalize">{task.status}</span>
                    </div>
                  </td>
                  <td className="py-4 text-gray-600">{task.dueDate}</td>
                  <td className="py-4 text-gray-600">{task.assignedTo}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default Tasks;



================================================
FILE: src/router/AppRoutes.jsx
================================================
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Dashboard from '../pages/Dashboard';
import Login from '../pages/Login';
import Notifications from '../pages/Notifications';
import Projects from '../pages/Projects';
import Tasks from '../pages/Tasks';
import Settings from '../pages/Setting';

const AppRoutes = () => {
  return (
      <Routes>
        <Route path="/" element={<Dashboard />} />
        <Route path="/login" element={<Login />} />
        <Route path="/notifications" element={<Notifications />} />
        <Route path="/projects" element={<Projects />} />
        <Route path="/tasks" element={<Tasks />} />
        <Route path="/settings" element={<Settings />} />
      </Routes>
  );
};

export default AppRoutes;



